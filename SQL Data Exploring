/*
   Covid Data Exploration  
*/

-- Select data im going to be using

SELECT
    location, date, total_cases, new_cases, total_deaths, population
FROM
    covid_deaths
WHERE
    continent IS NOT NULL
ORDER By 1,2;
-----------------------------------------------------------------------

-- Total cases vs Total deaths
-- Shows likelihood of dying if you contract covid in the United States

SELECT
    location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percentage
FROM
    covid_deaths
WHERE
    location = 'United States'
    AND continent IS NOT NULL
ORDER By 1,2; 
-----------------------------------------------------------------------

-- Looking at Total Cases vs Population
-- Shows what percentage of population contracted Covid

SELECT
    location, date, population, total_cases, total_deaths, (total_cases/population)*100 AS percent_population_infected
FROM
    covid_deaths
WHERE
    --location = 'United States'
    continent IS NOT NULL
ORDER By 1,2; 
-----------------------------------------------------------------------

-- Looking at countries with highest infection rate compared to population

SELECT
    location, population, MAX(total_cases) AS highest_infection_count, MAX((total_cases/population))*100 AS percent_population_infected
FROM
    covid_deaths
-- WHERE location = 'United States'
WHERE
    continent IS NOT NULL
GROUP BY
    location, population
ORDER BY
    percent_population_infected DESC;
-----------------------------------------------------------------------
    
-- Showing countries with highest death count per population

SELECT
    location, MAX(total_deaths) AS total_death_count
FROM
    covid_deaths
-- WHERE location = 'United States'
WHERE
    continent IS NOT NULL
GROUP BY
    location
ORDER BY
    total_death_count DESC;
-----------------------------------------------------------------------

-- Breaking it down by continent

SELECT
    continent, MAX(total_deaths) AS total_death_count
FROM
    covid_deaths
-- WHERE location = 'United States'
WHERE
    continent IS NOT NULL
GROUP BY
    continent
ORDER BY
    total_death_count DESC;
-----------------------------------------------------------------------

-- Showing continents with highest death count per population

SELECT
    continent, MAX(total_deaths) AS total_death_count
FROM
    covid_deaths
-- WHERE location = 'United States'
WHERE
    continent IS NOT NULL
GROUP BY
    continent
ORDER BY
    total_death_count DESC;
-----------------------------------------------------------------------

-- Global Numbers

SELECT
  date, SUM(CAST(new_cases as DOUBLE PRECISION)), SUM(CAST(new_deaths as DOUBLE PRECISION)), SUM(CAST(new_deaths as DOUBLE PRECISION))/SUM(CAST(new_cases as DOUBLE PRECISION)) * 100 AS death_percentage
FROM
    covid_deaths
WHERE
    --location = 'United States'
    continent IS NOT NULL
GROUP BY
    date
ORDER By 1,2; 
-----------------------------------------------------------------------

-- Looking at Total Population vs Vaccinations

SELECT d.continent, d.location, d.date, d.population, v.new_vaccinations,
SUM(v.new_vaccinations) OVER (partition by d.location ORDER BY d.location, d.date) AS rolling_count_people_vaccinated

from covid_deaths as d
JOIN covid_vaccinations as v
ON
    d.location = v.location
    AND
    d.date = v.date
WHERE
    d.continent is not null
ORDER BY
    2,3;
-----------------------------------------------------------------------

-- USE CTE

WITH popvsvac (continent, location, date, population, new_vaccinations, rolling_count_people_vaccinated)
AS(
SELECT d.continent, d.location, d.date, d.population, CAST(v.new_vaccinations AS DOUBLE PRECISION),
SUM(CAST(v.new_vaccinations AS DOUBLE PRECISION)) OVER (partition by d.location ORDER BY d.location, d.date) AS rolling_count_people_vaccinated

from covid_deaths as d
JOIN covid_vaccinations as v
ON
    d.location = v.location
    AND
    d.date = v.date
WHERE
    d.continent is not null
--ORDER BY 2,3;
)

SELECT *, (rolling_count_people_vaccinated/population) * 100
FROM
    popvsvac
-----------------------------------------------------------------------

--TEMP TABLE

DROP TABLE if exists percent_population_vaccinated
CREATE TABLE percent_population_vaccinated
(
    continent VARCHAR(100),
    location VARCHAR(100),
    date date,
    population INTEGER,
    new_vaccinations INTEGER,
    rolling_count_people_vaccinated DOUBLE PRECISION)

INSERT INTO percent_population_vaccinated
SELECT d.continent, d.location, d.date, d.population, CAST(v.new_vaccinations AS DOUBLE PRECISION),
SUM(CAST(v.new_vaccinations AS DOUBLE PRECISION)) OVER (partition by d.location ORDER BY d.location, d.date) AS rolling_count_people_vaccinated

from covid_deaths as d
JOIN covid_vaccinations as v
ON
    d.location = v.location
    AND
    d.date = v.date
WHERE
    d.continent is not null;
--ORDER BY 2,3;

SELECT *, (rolling_count_people_vaccinated/population) * 100
FROM
    percent_population_vaccinated
-----------------------------------------------------------------------

-- Creating view to store for later visualizations

CREATE VIEW
     percent_population_vaccinated_ AS
     SELECT d.continent, d.location, d.date, d.population, CAST(v.new_vaccinations AS DOUBLE PRECISION),
SUM(CAST(v.new_vaccinations AS DOUBLE PRECISION)) OVER (partition by d.location ORDER BY d.location, d.date) AS rolling_count_people_vaccinated

from covid_deaths as d
JOIN covid_vaccinations as v
ON
    d.location = v.location
    AND
    d.date = v.date
WHERE
    d.continent is not null;
--ORDER BY 2,3;
